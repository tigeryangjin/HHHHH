/*
最早日期，物料大类、物料中类、物料小类、商品编码、商品名称、销售件数，销售金额

排行榜（上周5-本周4，周，月），top2000

新品榜（周，月）
*/
--1.月
--1.1.月-排行榜-top2000
CREATE TABLE DATA_ACQUISITION_MONTH_TOPN AS
SELECT D.YEAR_MONTH,
       D.MATDLT,
       D.MATZLT,
       D.MATXLT,
       D.SALES_AMT_TOP_N,
       D.ACQ_ITEM_CODE,
       D.ACQ_NAME,
       D.SALES_QTY,
       D.SALES_AMT
  FROM (SELECT C.YEAR_MONTH,
               C.MATDLT,
               C.MATZLT,
               C.MATXLT,
               ROW_NUMBER() OVER(ORDER BY C.SALES_AMT DESC) SALES_AMT_TOP_N, /*根据销售金额排名*/
               C.ACQ_ITEM_CODE,
               C.ACQ_NAME,
               C.SALES_QTY,
               C.SALES_AMT
          FROM (SELECT SUBSTR(B.PERIOD, 1, 6) YEAR_MONTH,
                       B.MATDLT,
                       B.MATZLT,
                       B.MATXLT,
                       B.ACQ_ITEM_CODE,
                       B.ACQ_NAME,
                       SUM(B.ACQ_SALES) SALES_QTY,
                       SUM(B.SALES_AMT) SALES_AMT
                  FROM (SELECT A.PERIOD, /*日期*/
                               A.MATDLT, /*大类名称*/
                               A.MATZLT, /*中类名称*/
                               A.MATXLT, /*小类名称*/
                               A.ACQ_ITEM_CODE, /*商品编码*/
                               A.ACQ_NAME, /*商品名称*/
                               A.ACQ_SALES, /*销售数量*/
                               A.SALES_AMT /*销售金额*/
                          FROM (SELECT DISTINCT * FROM DATA_ACQUISITION_ITEM) A
                         WHERE A.PERIOD BETWEEN 20170901 AND 20170930) B
                 GROUP BY SUBSTR(B.PERIOD, 1, 6),
                          B.MATDLT,
                          B.MATZLT,
                          B.MATXLT,
                          B.ACQ_ITEM_CODE,
                          B.ACQ_NAME) C) D
 WHERE D.SALES_AMT_TOP_N <= 2000
 ORDER BY D.SALES_AMT_TOP_N;
 
--1.2.月-新品榜
CREATE TABLE DATA_ACQUISITION_MONTH_NEW AS
SELECT C.YEAR_MONTH,
       C.MATDLT,
       C.MATZLT,
       C.MATXLT,
       ROW_NUMBER() OVER(ORDER BY C.SALES_AMT DESC) SALES_AMT_TOP_N, /*根据销售金额排名*/
       C.MIN_PERIOD,
       C.ACQ_ITEM_CODE,
       C.ACQ_NAME,
       C.SALES_QTY,
       C.SALES_AMT
  FROM (SELECT SUBSTR(B.PERIOD, 1, 6) YEAR_MONTH,
               B.MATDLT,
               B.MATZLT,
               B.MATXLT,
               B.ACQ_ITEM_CODE,
               B.ACQ_NAME,
               B.MIN_PERIOD,
               SUM(B.ACQ_SALES) SALES_QTY,
               SUM(B.SALES_AMT) SALES_AMT
          FROM (SELECT A.PERIOD, /*日期*/
                       A.MATDLT, /*大类名称*/
                       A.MATZLT, /*中类名称*/
                       A.MATXLT, /*小类名称*/
                       A.ACQ_ITEM_CODE, /*商品编码*/
                       D.MIN_PERIOD, /*最小日期*/
                       A.ACQ_NAME, /*商品名称*/
                       A.ACQ_SALES, /*销售数量*/
                       A.SALES_AMT /*销售金额*/
                  FROM (SELECT DISTINCT * FROM DATA_ACQUISITION_ITEM) A,
                       (SELECT *
                          FROM DATA_ACQUISITION_ITEM_MIN_PER E
                         WHERE E.MIN_PERIOD BETWEEN 20170901 AND 20170930) D
                 WHERE A.PERIOD BETWEEN 20170901 AND 20170930
                   AND A.ACQ_ITEM_CODE = D.ACQ_ITEM_CODE) B
         GROUP BY SUBSTR(B.PERIOD, 1, 6),
                  B.MATDLT,
                  B.MATZLT,
                  B.MATXLT,
                  B.ACQ_ITEM_CODE,
                  B.ACQ_NAME, 
                  B.MIN_PERIOD) C WHERE 1=2;
									
--2.周
--2.1.周-排行榜-top2000

--2.2.周-新品榜

--3.
CREATE TABLE DATA_ACQUISITION_ITEM_MIN_PER AS
SELECT F.ACQ_ITEM_CODE, MIN(F.PERIOD) MIN_PERIOD
  FROM DATA_ACQUISITION_ITEM F
	WHERE F.ACQ_ITEM_CODE IS NOT NULL
 GROUP BY F.ACQ_ITEM_CODE;
 
INSERT INTO DATA_ACQUISITION_ITEM_MIN_PER
  (ACQ_ITEM_CODE, MIN_PERIOD, INSERT_DT)
  SELECT A.ACQ_ITEM_CODE, MIN(A.PERIOD) MIN_PERIOD, SYSDATE INSERT_DT
    FROM DATA_ACQUISITION_ITEM A
   WHERE A.ACQ_ITEM_CODE IS NOT NULL
     AND NOT EXISTS (SELECT 1
            FROM DATA_ACQUISITION_ITEM_MIN_PER B
           WHERE A.ACQ_ITEM_CODE = B.ACQ_ITEM_CODE)
   GROUP BY A.ACQ_ITEM_CODE;

--4.DATA_ACQUISITION_ITEM清洗
--此表数据是爬虫从京东网站爬下来的销售数据，所以数据一直都是累计的。
CREATE TABLE DATA_ACQUISITION_ITEM_TMP AS
SELECT B.PERIOD,
       B.MATDLT,
       B.MATZLT,
       B.MATXLT,
       B.ACQ_ITEM_CODE,
       B.ACQ_NAME,
       B.ACQ_URL,
       B.ACQ_PIC,
       B.ACQ_SHOP_NAME,
       B.ACQ_PRICE,
       B.ACQ_SALES,
       B.SALES_AMT
  FROM (SELECT A.PERIOD,
               A.MATDLT,
               A.MATZLT,
               A.MATXLT,
               A.ACQ_ITEM_CODE,
               A.ACQ_NAME,
               A.ACQ_URL,
               A.ACQ_PIC,
               A.ACQ_SHOP_NAME,
               A.ACQ_PRICE,
               A.ACQ_SALES,
               A.SALES_AMT,
               ROW_NUMBER() OVER(PARTITION BY A.PERIOD, A.ACQ_ITEM_CODE ORDER BY A.DATA_SOURCE, A.PERIOD, A.ACQ_CATEGORY_NAME, A.MATDLT, A.MATZLT, A.MATXLT, A.ACQ_ITEM_CODE, A.ACQ_NAME, A.ACQ_URL, A.ACQ_PIC, A.ACQ_SHOP_NAME, A.ACQ_PRICE, A.ACQ_SALES, A.SALES_AMT, A.INSERT_DATE, A.VALID_FLAG) RN
          FROM DATA_ACQUISITION_ITEM A
         WHERE A.PERIOD = 20171030) B
 WHERE B.RN = 1;

CREATE TABLE DATA_ACQUISITION_ITEM_BASE AS
SELECT * FROM DATA_ACQUISITION_ITEM_TMP WHERE 1=2;

--5.DATA_ACQUISITION_ITEM_BASE增量转换
CREATE TABLE DATA_ACQUISITION_ITEM_CURRENT AS
SELECT A.PERIOD,
       A.MATDLT,
       A.MATZLT,
       A.MATXLT,
       A.ACQ_ITEM_CODE,
       A.ACQ_NAME,
       A.ACQ_URL,
       A.ACQ_PIC,
       A.ACQ_SHOP_NAME,
       A.ACQ_PRICE,
       A.ACQ_SALES - LAG(A.ACQ_SALES, 1, 0) OVER(PARTITION BY A.ACQ_ITEM_CODE ORDER BY A.PERIOD) CURRENT_ACQ_SALES,
       A.SALES_AMT - LAG(A.SALES_AMT, 1, 0) OVER(PARTITION BY A.ACQ_ITEM_CODE ORDER BY A.PERIOD) CURRENT_SALES_AMT
  FROM DATA_ACQUISITION_ITEM_BASE A
	WHERE 1=2;

INSERT INTO DATA_ACQUISITION_ITEM_CURRENT
  (PERIOD,
   MATDLT,
   MATZLT,
   MATXLT,
   ACQ_ITEM_CODE,
   ACQ_NAME,
   ACQ_URL,
   ACQ_PIC,
   ACQ_SHOP_NAME,
   ACQ_PRICE,
   CURRENT_ACQ_SALES,
   CURRENT_SALES_AMT)
  SELECT A.PERIOD,
         A.MATDLT,
         A.MATZLT,
         A.MATXLT,
         A.ACQ_ITEM_CODE,
         A.ACQ_NAME,
         A.ACQ_URL,
         A.ACQ_PIC,
         A.ACQ_SHOP_NAME,
         A.ACQ_PRICE,
         A.ACQ_SALES - LAG(A.ACQ_SALES, 1, 0) OVER(PARTITION BY A.ACQ_ITEM_CODE ORDER BY A.PERIOD) CURRENT_ACQ_SALES,
         A.SALES_AMT - LAG(A.SALES_AMT, 1, 0) OVER(PARTITION BY A.ACQ_ITEM_CODE ORDER BY A.PERIOD) CURRENT_SALES_AMT
    FROM DATA_ACQUISITION_ITEM_BASE A;

SELECT A.PERIOD,
       A.MATDLT,
       A.MATZLT,
       A.MATXLT,
       A.ACQ_ITEM_CODE,
       A.ACQ_NAME,
       A.ACQ_URL,
       A.ACQ_PIC,
       A.ACQ_SHOP_NAME,
       A.ACQ_PRICE,
       A.CURRENT_ACQ_SALES,
       A.CURRENT_SALES_AMT
  FROM DATA_ACQUISITION_ITEM_CURRENT A;

--TMP
SELECT * FROM DATA_ACQUISITION_ITEM;
SELECT * FROM DATA_ACQUISITION_ITEM_BASE;
SELECT * FROM DATA_ACQUISITION_ITEM_CURRENT;
SELECT * FROM DATA_ACQUISITION_ITEM_MIN_PER;
SELECT * FROM DATA_ACQUISITION_ITEM_TMP;
SELECT * FROM DATA_ACQUISITION_WEEK_NEW;
SELECT * FROM DATA_ACQUISITION_WEEK_TOPN;
SELECT * FROM DATA_ACQUISITION_MONTH_NEW;
SELECT * FROM DATA_ACQUISITION_MONTH_TOPN;


SELECT DISTINCT A.PERIOD FROM DATA_ACQUISITION_WEEK_NEW A;
SELECT DISTINCT A.PERIOD FROM DATA_ACQUISITION_WEEK_TOPN A;
SELECT DISTINCT A.YEAR_MONTH FROM DATA_ACQUISITION_MONTH_NEW A;
SELECT DISTINCT A.YEAR_MONTH FROM DATA_ACQUISITION_MONTH_TOPN A;

TRUNCATE TABLE DATA_ACQUISITION_WEEK_NEW;
TRUNCATE TABLE DATA_ACQUISITION_WEEK_TOPN;
TRUNCATE TABLE DATA_ACQUISITION_MONTH_NEW;
TRUNCATE TABLE DATA_ACQUISITION_MONTH_TOPN;



select *
  from 
 where (DATA_SOURCE = 1 and ACQ_ITEM_CODE < 9999999)
    or (DATA_SOURCE = 3 data_acquisition_itemand ACQ_SHOP_NAME like '%旗舰店');

SELECT /*+PARALLEL(16)*/ DISTINCT TRUNC(A.INSERT_DATE)
  FROM DATA_ACQUISITION_ITEM A
 ORDER BY 1 DESC;

select * from data_acquisition_item a where a.acq_shop_name like '%旗舰店';

SELECT COUNT(1) FROM data_acquisition_item;

--重复值
select /*+PARALLEL(32)*/
 *
  from DATA_ACQUISITION_ITEM t
 WHERE T.PERIOD = 20170904
   AND T.ACQ_ITEM_CODE = 4609660;

SELECT /*+PARALLEL(32)*/
 *
  FROM DATA_ACQUISITION_ITEM A
 WHERE A.PERIOD = 20170911
   AND A.ACQ_ITEM_CODE = 44574224999;

SELECT *
  FROM W_ETL_LOG A
 WHERE UPPER(A.TABLE_NAME) = 'DATA_ACQUISITION_ITEM'
 ORDER BY A.START_TIME DESC;

SELECT DATE '2017-11-03' - 3 FROM DUAL;

SELECT A.YEAR_MONTH,
       A.MATDLT,
       A.MATZLT,
       A.MATXLT,
       A.SALES_AMT_TOP_N,
       A.ACQ_ITEM_CODE,
       A.ACQ_NAME,
       A.SALES_QTY,
       A.SALES_AMT
  FROM DATA_ACQUISITION_MONTH_TOPN A;

SELECT * FROM S_PARAMETERS2 FOR UPDATE;

select trunc(sysdate,'MM') from dual;
select last_day(sysdate) from dual;

SELECT * FROM DATA_ACQUISITION_MONTH_TOPN;


SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME='YANGJIN_PKG.DATA_ACQUISITION_MONTH_TOPN' ORDER BY A.START_TIME DESC;

SELECT F.ACQ_ITEM_CODE, MIN(F.PERIOD) MIN_PERIOD
  FROM DATA_ACQUISITION_ITEM F
 GROUP BY F.ACQ_ITEM_CODE;
 
SELECT /*+PARALLEL(32)*/ A.PERIOD, A.ACQ_ITEM_CODE, COUNT(1)
  FROM (SELECT DISTINCT * FROM DATA_ACQUISITION_ITEM) A
	WHERE A.SALES_AMT>0
 GROUP BY A.PERIOD, A.ACQ_ITEM_CODE
HAVING COUNT(1) > 1;

SELECT 'CALL YANGJIN_PKG_TEST.DATA_ACQUISITION_MONTH_TOPN(' || B.PERIOD || ');'
  FROM (SELECT /*+PARALLEL(32)*/ DISTINCT A.PERIOD
          FROM DATA_ACQUISITION_ITEM_CURRENT A
         ORDER BY A.PERIOD) B;

SELECT * FROM S_PARAMETERS2 FOR UPDATE;

SELECT COUNT(1) FROM DATA_ACQUISITION_ITEM_TMP;

SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME='YANGJIN_PKG.DATA_ACQUISITION_ITEM_CURRENT' ORDER BY A.START_TIME DESC;

SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME LIKE 'YANGJIN_PKG.DATA_ACQUISITION%' ORDER BY A.START_TIME DESC;

SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME = 'YANGJIN_PKG.DATA_ACQUISITION_WEEK_TOPN' ORDER BY A.START_TIME DESC;
SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME = 'YANGJIN_PKG.DATA_ACQUISITION_WEEK_NEW' ORDER BY A.START_TIME DESC;
SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME = 'YANGJIN_PKG.DATA_ACQUISITION_MONTH_TOPN' ORDER BY A.START_TIME DESC;
SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME = 'YANGJIN_PKG.DATA_ACQUISITION_MONTH_NEW' ORDER BY A.START_TIME DESC;
SELECT * FROM W_ETL_LOG A WHERE A.PROC_NAME = 'YANGJIN_PKG.DATA_ACQUISITION_ITEM_BASE' ORDER BY A.START_TIME DESC;

SELECT /*+PARALLEL(32)*/ * FROM DATA_ACQUISITION_ITEM A WHERE A.PERIOD=20171103;
SELECT /*+PARALLEL(32)*/ * FROM DATA_ACQUISITION_ITEM_BASE A WHERE A.PERIOD=20171103;
