/*
一级分类名称  OPER_PRODUCT_DAILY_REPORT.MATDLT
二级分类名称  OPER_PRODUCT_DAILY_REPORT.MATZLT
三级分类名称  OPER_PRODUCT_DAILY_REPORT.MATXLT
商品ID        OPER_PRODUCT_DAILY_REPORT.ITEM_CODE
商品名称      OPER_PRODUCT_DAILY_REPORT.GOODS_NAME
商品价格      DIM_EC_GOOD.GOODS_PRICE
进价          OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_PURCHASE_AMOUNT/OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_ORDER_QTY
毛利额        OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_PROFIT_AMOUNT
毛利率        OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_PROFIT_RATE
是否TV商品    DIM_EC_GOOD.IS_TV
是否仓配      DIM_EC_GOOD.IS_SHIPPING_SELF
销售金额      OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_ORDER_AMOUNT
销售件数      OPER_PRODUCT_DAILY_REPORT.EFFECTIVE_ORDER_QTY
浏览人数      FACT_DAILY_GOODORDER.GOODUV
浏览次数      FACT_DAILY_GOODORDER.GOODPV
订购人数      OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_MEMBER_COUNT
转化率
*/

INSERT INTO OPER_PRODUCT_DAILY_PREVIEW
  (POSTING_DATE_KEY,
   MATDLT,
   MATZLT,
   MATXLT,
   ITEM_CODE,
   GOOD_NAME,
   GOOD_S_PRICE,
   GOOD_C_PRICE,
   PROFIT_AMOUNT,
   PROFIT_RATE,
   IS_TV,
   IS_SHIPPING_SELF,
   ORDER_AMOUNT,
   ORDER_QTY,
   PV,
   UV,
   ORDER_MEMBER_COUNT,
   CONVERSION_RATE)
  SELECT A.POSTING_DATE_KEY, /*日期*/
         B.MATDLT, /*一级分类名称*/
         B.MATZLT, /*二级分类名称*/
         B.MATXLT, /*三级分类名称*/
         B.ITEM_CODE, /*商品编码*/
         B.GOODS_NAME GOOD_NAME, /*商品名称*/
         B.GOODS_PRICE GOOD_S_PRICE, /*商品价格*/
         DECODE(A.TOTAL_ORDER_QTY,
                0,
                0,
                A.TOTAL_PURCHASE_AMOUNT / A.TOTAL_ORDER_QTY) GOOD_C_PRICE, /*商品进价*/
         A.GROSS_PROFIT_AMOUNT PROFIT_AMOUNT, /*毛利额*/
         A.GROSS_PROFIT_RATE PROFIT_RATE, /*毛利率*/
         B.IS_TV, /*是否TV商品*/
         B.IS_SHIPPING_SELF, /*是否仓配*/
         A.TOTAL_ORDER_AMOUNT ORDER_AMOUNT, /*销售金额*/
         A.TOTAL_ORDER_QTY ORDER_QTY, /*销售件数*/
         NVL(C.PV, 0) PV, /*浏览次数*/
         NVL(C.UV, 0) UV, /*浏览人数*/
         A.TOTAL_ORDER_MEMBER_COUNT ORDER_MEMBER_COUNT, /*订购人数*/
         DECODE(NVL(C.UV, 0),
                0,
                0,
                ROUND(A.TOTAL_ORDER_MEMBER_COUNT / NVL(C.UV, 0), 2)) CONVERSION_RATE /*转换率*/
    FROM (SELECT A1.POSTING_DATE_KEY,
                 A1.MATDLT,
                 A1.MATZLT,
                 A1.MATXLT,
                 A1.ITEM_CODE,
                 SUM(A1.TOTAL_ORDER_QTY) TOTAL_ORDER_QTY,
                 SUM(A1.TOTAL_PURCHASE_AMOUNT) TOTAL_PURCHASE_AMOUNT,
                 SUM(A1.GROSS_PROFIT_AMOUNT) GROSS_PROFIT_AMOUNT,
                 SUM(A1.GROSS_PROFIT_RATE) GROSS_PROFIT_RATE,
                 SUM(A1.TOTAL_ORDER_AMOUNT) TOTAL_ORDER_AMOUNT,
                 SUM(A1.TOTAL_ORDER_MEMBER_COUNT) TOTAL_ORDER_MEMBER_COUNT
            FROM OPER_PRODUCT_DAILY_REPORT A1
           WHERE A1.POSTING_DATE_KEY = 20180117
             AND A1.SALES_SOURCE_NAME = '电商'
           GROUP BY A1.POSTING_DATE_KEY,
                    A1.MATDLT,
                    A1.MATZLT,
                    A1.MATXLT,
                    A1.ITEM_CODE) A,
         DIM_EC_GOOD B,
         (SELECT C1.VISIT_DATE_KEY,
                 SUBSTR(C1.ITEM_CODE, 1, 6) ITEM_CODE,
                 SUM(C1.GOODPV) PV,
                 SUM(C1.GOODUV) UV
            FROM FACT_DAILY_GOODORDER C1
           WHERE C1.VISIT_DATE_KEY = 20180117
           GROUP BY C1.VISIT_DATE_KEY, SUBSTR(C1.ITEM_CODE, 1, 6)) C
   WHERE B.ITEM_CODE = A.ITEM_CODE(+)
     AND B.ITEM_CODE = C.ITEM_CODE(+)
     AND A.POSTING_DATE_KEY = 20180117;

SELECT *
  FROM W_ETL_LOG A
 WHERE A.PROC_NAME = 'YANGJIN_PKG.OPER_PRODUCT_DAILY_PREVIEW'
 ORDER BY A.START_TIME DESC;

DELETE W_ETL_LOG A
 WHERE A.PROC_NAME = 'YANGJIN_PKG.OPER_PRODUCT_DAILY_PREVIEW';
COMMIT;

--**********************************************************************************************
/*
日期            OPER_PRODUCT_DAILY_REPORT.POSTING_DATE_KEY
一级分类名称    DIM_EC_GOOD.MATDLT
二级分类名称    DIM_EC_GOOD.MATZLT
三级分类名称    DIM_EC_GOOD.MATXLT
商品ID          DIM_EC_GOOD.ITEM_CODE
商品名称        DIM_EC_GOOD.GOODS_NAME
商品价格        DIM_EC_GOOD.GOODS_PRICE
进价            FACT_GOODS_SALES.COST_PRICE
提报组          DIM_GOOD.GROUP_NAME
是否仓配        DIM_EC_GOOD.IS_SHIPPING_SELF
是否当天播出    DIM_TV_GOOD
TV销售金额      OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_AMOUNT
TV销售件数      OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_QTY
电商销售金额    OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_AMOUNT
电商销售件数    OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_QTY
电商毛利额      OPER_PRODUCT_DAILY_REPORT.GROSS_PROFIT_AMOUNT
电商毛利率      OPER_PRODUCT_DAILY_REPORT.GROSS_PROFIT_RATE
浏览人数        FACT_DAILY_GOODORDER.GOODUV
浏览次数        FACT_DAILY_GOODORDER.GOODPV
电商订购人数    OPER_PRODUCT_DAILY_REPORT.TOTAL_ORDER_MEMBER_COUNT
转化率 
收藏次数        FACT_FAVORITES
加购物车次数    FACT_SHOPPINGCAR
好评次数        FACT_GOODS_EVALUATE
中评次数        FACT_GOODS_EVALUATE
差评次数        FACT_GOODS_EVALUATE
电商拒收人数    OPER_PRODUCT_DAILY_REPORT.REJECT_MEMBER_COUNT
电商拒收件数    OPER_PRODUCT_DAILY_REPORT.REJECT_QTY
电商退货人数    OPER_PRODUCT_DAILY_REPORT.REVERSE_MEMBER_COUNT
电商退货件数    OPER_PRODUCT_DAILY_REPORT.REVERSE_QTY
*/
WITH
/*电商销售*/
A AS
 (SELECT A1.POSTING_DATE_KEY,
         A1.MATDLT,
         A1.MATZLT,
         A1.MATXLT,
         A1.ITEM_CODE,
         SUM(A1.TOTAL_ORDER_QTY) DS_ORDER_QTY, /*电商销售件数*/
         SUM(A1.GROSS_PROFIT_AMOUNT) DS_PROFIT_AMOUNT, /*电商毛利额*/
         SUM(A1.GROSS_PROFIT_RATE) DS_PROFIT_RATE, /*电商毛利率*/
         SUM(A1.TOTAL_ORDER_AMOUNT) DS_ORDER_AMOUNT, /*电商销售金额*/
         SUM(A1.TOTAL_ORDER_MEMBER_COUNT) DS_ORDER_MEMBER_COUNT, /*电商订购人数*/
         SUM(A1.REJECT_MEMBER_COUNT) DS_REJECT_MEMBER_COUNT, /*电商拒收人数*/
         SUM(A1.REJECT_QTY) DS_REJECT_QTY, /*电商拒收件数*/
         SUM(A1.REVERSE_MEMBER_COUNT) DS_REVERSE_MEMBER_COUNT, /*电商退货人数*/
         SUM(A1.REVERSE_QTY) DS_REVERSE_QTY /*电商退货件数*/
    FROM OPER_PRODUCT_DAILY_REPORT A1
   WHERE A1.POSTING_DATE_KEY = 20180117
     AND A1.SALES_SOURCE_NAME = '电商'
   GROUP BY A1.POSTING_DATE_KEY,
            A1.MATDLT,
            A1.MATZLT,
            A1.MATXLT,
            A1.ITEM_CODE),
/*TV销售*/
L AS
 (SELECT A1.POSTING_DATE_KEY,
         A1.MATDLT,
         A1.MATZLT,
         A1.MATXLT,
         A1.ITEM_CODE,
         SUM(A1.TOTAL_ORDER_QTY) TV_ORDER_QTY, /*TV销售件数*/
         SUM(A1.TOTAL_ORDER_AMOUNT) TV_ORDER_AMOUNT /*TV销售金额*/
    FROM OPER_PRODUCT_DAILY_REPORT A1
   WHERE A1.POSTING_DATE_KEY = 20180117
     AND A1.SALES_SOURCE_NAME = 'TV'
   GROUP BY A1.POSTING_DATE_KEY,
            A1.MATDLT,
            A1.MATZLT,
            A1.MATXLT,
            A1.ITEM_CODE),
/*PV,UV*/
C AS
 (SELECT C1.VISIT_DATE_KEY,
         SUBSTR(C1.ITEM_CODE, 1, 6) ITEM_CODE,
         SUM(C1.GOODPV) PV,
         SUM(C1.GOODUV) UV
    FROM FACT_DAILY_GOODORDER C1
   WHERE C1.VISIT_DATE_KEY = 20180117
   GROUP BY C1.VISIT_DATE_KEY, SUBSTR(C1.ITEM_CODE, 1, 6)),
/*评价*/
I AS
 (SELECT H.GEVAL_ADDTIME_KEY,
         H.ITEM_CODE,
         SUM(H.LOW_EVAL) LOW_EVAL_COUNT, /*差评次数*/
         SUM(H.MED_EVAL) MED_EVAL_COUNT, /*中评次数*/
         SUM(H.HIGH_EVAL) HIGH_EVAL_COUNT /*好评次数*/
    FROM (SELECT G.GEVAL_ADDTIME_KEY,
                 G.ITEM_CODE,
                 CASE
                   WHEN G.GEVAL_SCORES IN (1, 2) THEN
                    1
                   ELSE
                    0
                 END LOW_EVAL,
                 CASE
                   WHEN G.GEVAL_SCORES IN (3) THEN
                    1
                   ELSE
                    0
                 END MED_EVAL,
                 CASE
                   WHEN G.GEVAL_SCORES IN (4, 5) THEN
                    1
                   ELSE
                    0
                 END HIGH_EVAL
            FROM FACT_GOODS_EVALUATE G
           WHERE G.GEVAL_ADDTIME_KEY = 20180117) H
   GROUP BY H.GEVAL_ADDTIME_KEY, H.ITEM_CODE),
/*收藏*/
J AS
 (SELECT J1.FAV_TIME, J1.FAV_ID ITEM_CODE, COUNT(1) FAV_COUNT
    FROM FACT_FAVORITES J1
   WHERE J1.FAV_TYPE = 'goods'
     AND J1.FAV_TIME = 20180117
   GROUP BY J1.FAV_TIME, J1.FAV_ID),
/*购物车*/
K AS
 (SELECT K1.CREATE_DATE_KEY, K1.SCGID ITEM_CODE, COUNT(1) CAR_COUNT
    FROM FACT_SHOPPINGCAR K1
   WHERE K1.PAGE_NAME = 'good'
     AND K1.CREATE_DATE_KEY = 20180117
   GROUP BY K1.CREATE_DATE_KEY, K1.SCGID)
/*SELECT*/
SELECT NVL(A.POSTING_DATE_KEY, 20180117) POSTING_DATE_KEY, /*日期*/
       B.MATDLT, /*一级分类名称*/
       B.MATZLT, /*二级分类名称*/
       B.MATXLT, /*三级分类名称*/
       B.ITEM_CODE, /*商品编码*/
       B.GOODS_NAME GOOD_NAME, /*商品名称*/
       B.GOODS_PRICE GOOD_S_PRICE, /*商品价格*/
       (SELECT NVL(MAX(D.COST_PRICE), 0)
          FROM FACT_GOODS_SALES D
         WHERE D.POSTING_DATE_KEY = 20180117
           AND B.ITEM_CODE = D.GOODS_COMMON_KEY) GOOD_C_PRICE, /*商品进价*/
       (SELECT E.GROUP_NAME
          FROM DIM_GOOD E
         WHERE B.ITEM_CODE = E.ITEM_CODE
           AND E.CURRENT_FLG = 'Y') GROUP_NAME, /*提报组*/
       NVL((SELECT MAX(1)
             FROM DIM_TV_GOOD F
            WHERE B.ITEM_CODE = F.ITEM_CODE
              AND F.TV_STARTDAY_KEY = 20180117),
           0) IS_ONTV, /*是否当天播出*/
       B.IS_SHIPPING_SELF, /*是否仓配*/
       NVL(L.TV_ORDER_AMOUNT, 0) TV_ORDER_AMOUNT, /*TV销售金额*/
       NVL(L.TV_ORDER_QTY, 0) TV_ORDER_QTY, /*TV销售件数*/
       NVL(A.DS_ORDER_AMOUNT, 0) DS_ORDER_AMOUNT, /*电商销售金额*/
       NVL(A.DS_ORDER_QTY, 0) DS_ORDER_QTY, /*电商销售件数*/
       NVL(A.DS_PROFIT_AMOUNT, 0) PROFIT_AMOUNT, /*电商毛利额*/
       NVL(A.DS_PROFIT_RATE, 0) PROFIT_RATE, /*电商毛利率*/
       NVL(C.PV, 0) PV, /*浏览次数*/
       NVL(C.UV, 0) UV, /*浏览人数*/
       NVL(A.DS_ORDER_MEMBER_COUNT, 0) DS_ORDER_MEMBER_COUNT, /*电商订购人数*/
       DECODE(NVL(C.UV, 0),
              0,
              0,
              ROUND(NVL(A.DS_ORDER_MEMBER_COUNT, 0) / NVL(C.UV, 0), 2)) CONVERSION_RATE, /*转换率*/
       NVL(J.FAV_COUNT, 0) FAV_COUNT, /*收藏次数*/
       NVL(K.CAR_COUNT, 0) CAR_COUNT, /*加购物车次数*/
       NVL(I.LOW_EVAL_COUNT, 0) LOW_EVAL_COUNT, /*差评次数*/
       NVL(I.MED_EVAL_COUNT, 0) MED_EVAL_COUNT, /*中评次数*/
       NVL(I.HIGH_EVAL_COUNT, 0) HIGH_EVAL_COUNT, /*好评次数*/
       NVL(A.DS_REJECT_MEMBER_COUNT, 0) DS_REJECT_MEMBER_COUNT, /*电商拒收人数*/
       NVL(A.DS_REJECT_QTY, 0) DS_REJECT_QTY, /*电商拒收件数*/
       NVL(A.DS_REVERSE_MEMBER_COUNT, 0) DS_REVERSE_MEMBER_COUNT, /*电商退货人数*/
       NVL(A.DS_REVERSE_QTY, 0) DS_REVERSE_QTY /*电商退货件数*/
  FROM DIM_EC_GOOD B, A, L, C, I, J, K
 WHERE B.ITEM_CODE = A.ITEM_CODE(+)
   AND B.ITEM_CODE = C.ITEM_CODE(+)
   AND B.ITEM_CODE = I.ITEM_CODE(+)
   AND B.ITEM_CODE = J.ITEM_CODE(+)
   AND B.ITEM_CODE = K.ITEM_CODE(+)
   AND B.ITEM_CODE = L.ITEM_CODE(+)
   AND (C.PV > 0 OR L.TV_ORDER_QTY > 0 OR A.DS_ORDER_QTY > 0);

--create state table 
--OPER_PRODUCT_DAILY_DS_S
INSERT INTO OPER_PRODUCT_DAILY_DS_S
  (POSTING_DATE_KEY,
   MATDLT,
   MATZLT,
   MATXLT,
   ITEM_CODE,
   DS_ORDER_QTY,
   DS_PROFIT_AMOUNT,
   DS_PROFIT_RATE,
   DS_ORDER_AMOUNT,
   DS_ORDER_MEMBER_COUNT,
   DS_REJECT_MEMBER_COUNT,
   DS_REJECT_QTY,
   DS_REVERSE_MEMBER_COUNT,
   DS_REVERSE_QTY)
  SELECT A1.POSTING_DATE_KEY,
         A1.MATDLT,
         A1.MATZLT,
         A1.MATXLT,
         A1.ITEM_CODE,
         SUM(A1.TOTAL_ORDER_QTY) DS_ORDER_QTY, /*电商销售件数*/
         SUM(A1.GROSS_PROFIT_AMOUNT) DS_PROFIT_AMOUNT, /*电商毛利额*/
         SUM(A1.GROSS_PROFIT_RATE) DS_PROFIT_RATE, /*电商毛利率*/
         SUM(A1.TOTAL_ORDER_AMOUNT) DS_ORDER_AMOUNT, /*电商销售金额*/
         SUM(A1.TOTAL_ORDER_MEMBER_COUNT) DS_ORDER_MEMBER_COUNT, /*电商订购人数*/
         SUM(A1.REJECT_MEMBER_COUNT) DS_REJECT_MEMBER_COUNT, /*电商拒收人数*/
         SUM(A1.REJECT_QTY) DS_REJECT_QTY, /*电商拒收件数*/
         SUM(A1.REVERSE_MEMBER_COUNT) DS_REVERSE_MEMBER_COUNT, /*电商退货人数*/
         SUM(A1.REVERSE_QTY) DS_REVERSE_QTY /*电商退货件数*/
    FROM OPER_PRODUCT_DAILY_REPORT A1
   WHERE A1.POSTING_DATE_KEY = 20180117
     AND A1.SALES_SOURCE_NAME = '电商'
     AND A1.ITEM_CODE IS NOT NULL
   GROUP BY A1.POSTING_DATE_KEY,
            A1.MATDLT,
            A1.MATZLT,
            A1.MATXLT,
            A1.ITEM_CODE;

--OPER_PRODUCT_DAILY_TV_S
INSERT INTO OPER_PRODUCT_DAILY_TV_S
  (POSTING_DATE_KEY,
   MATDLT,
   MATZLT,
   MATXLT,
   ITEM_CODE,
   TV_ORDER_QTY,
   TV_ORDER_AMOUNT)
  SELECT A1.POSTING_DATE_KEY,
         A1.MATDLT,
         A1.MATZLT,
         A1.MATXLT,
         A1.ITEM_CODE,
         SUM(A1.TOTAL_ORDER_QTY) TV_ORDER_QTY, /*TV销售件数*/
         SUM(A1.TOTAL_ORDER_AMOUNT) TV_ORDER_AMOUNT /*TV销售金额*/
    FROM OPER_PRODUCT_DAILY_REPORT A1
   WHERE A1.POSTING_DATE_KEY = 20180117
     AND A1.SALES_SOURCE_NAME = 'TV'
     AND A1.ITEM_CODE IS NOT NULL
   GROUP BY A1.POSTING_DATE_KEY,
            A1.MATDLT,
            A1.MATZLT,
            A1.MATXLT,
            A1.ITEM_CODE;

--OPER_PRODUCT_DAILY_PUV_S
INSERT INTO OPER_PRODUCT_DAILY_PUV_S
  (VISIT_DATE_KEY, ITEM_CODE, PV, UV)
  SELECT C1.VISIT_DATE_KEY,
         SUBSTR(C1.ITEM_CODE, 1, 6) ITEM_CODE,
         SUM(C1.GOODPV) PV,
         SUM(C1.GOODUV) UV
    FROM FACT_DAILY_GOODORDER C1
   WHERE C1.VISIT_DATE_KEY = 20180117
   GROUP BY C1.VISIT_DATE_KEY, SUBSTR(C1.ITEM_CODE, 1, 6);

--OPER_PRODUCT_DAILY_EVAL_S
INSERT INTO OPER_PRODUCT_DAILY_EVAL_S
  (GEVAL_ADDTIME_KEY,
   ITEM_CODE,
   LOW_EVAL_COUNT,
   MED_EVAL_COUNT,
   HIGH_EVAL_COUNT)
  SELECT H.GEVAL_ADDTIME_KEY,
         H.ITEM_CODE,
         SUM(H.LOW_EVAL) LOW_EVAL_COUNT, /*差评次数*/
         SUM(H.MED_EVAL) MED_EVAL_COUNT, /*中评次数*/
         SUM(H.HIGH_EVAL) HIGH_EVAL_COUNT /*好评次数*/
    FROM (SELECT G.GEVAL_ADDTIME_KEY,
                 G.ITEM_CODE,
                 CASE
                   WHEN G.GEVAL_SCORES IN (1, 2) THEN
                    1
                   ELSE
                    0
                 END LOW_EVAL,
                 CASE
                   WHEN G.GEVAL_SCORES IN (3) THEN
                    1
                   ELSE
                    0
                 END MED_EVAL,
                 CASE
                   WHEN G.GEVAL_SCORES IN (4, 5) THEN
                    1
                   ELSE
                    0
                 END HIGH_EVAL
            FROM FACT_GOODS_EVALUATE G
           WHERE G.GEVAL_ADDTIME_KEY = 20180117) H
   GROUP BY H.GEVAL_ADDTIME_KEY, H.ITEM_CODE;

--OPER_PRODUCT_DAILY_FAV_S
INSERT INTO OPER_PRODUCT_DAILY_FAV_S
  (FAV_TIME, ITEM_CODE, FAV_COUNT)
  SELECT J1.FAV_TIME, J1.FAV_ID ITEM_CODE, COUNT(1) FAV_COUNT
    FROM FACT_FAVORITES J1
   WHERE J1.FAV_TYPE = 'goods'
     AND J1.FAV_TIME = 20180117
   GROUP BY J1.FAV_TIME, J1.FAV_ID;

--OPER_PRODUCT_DAILY_CAR_S
INSERT INTO OPER_PRODUCT_DAILY_CAR_S
  (CREATE_DATE_KEY, ITEM_CODE, CAR_COUNT)
  SELECT K1.CREATE_DATE_KEY, K1.SCGID ITEM_CODE, COUNT(1) CAR_COUNT
    FROM FACT_SHOPPINGCAR K1
   WHERE K1.PAGE_NAME = 'good'
     AND K1.CREATE_DATE_KEY = 20180117
   GROUP BY K1.CREATE_DATE_KEY, K1.SCGID;

--合并
INSERT INTO OPER_PRODUCT_DAILY_PREVIEW
  (POSTING_DATE_KEY,
   MATDLT,
   MATZLT,
   MATXLT,
   ITEM_CODE,
   GOOD_NAME,
   GOOD_S_PRICE,
   GOOD_C_PRICE,
   GROUP_NAME,
   IS_ONTV,
   IS_SHIPPING_SELF,
   TV_ORDER_AMOUNT,
   TV_ORDER_QTY,
   DS_ORDER_AMOUNT,
   DS_ORDER_QTY,
   PROFIT_AMOUNT,
   PROFIT_RATE,
   PV,
   UV,
   DS_ORDER_MEMBER_COUNT,
   CONVERSION_RATE,
   FAV_COUNT,
   CAR_COUNT,
   LOW_EVAL_COUNT,
   MED_EVAL_COUNT,
   HIGH_EVAL_COUNT,
   DS_REJECT_MEMBER_COUNT,
   DS_REJECT_QTY,
   DS_REVERSE_MEMBER_COUNT,
   DS_REVERSE_QTY,
   W_INSERT_DT,
   W_UPDATE_DT)
  SELECT B.POSTING_DATE_KEY POSTING_DATE_KEY, /*日期*/
         B.MATDLT, /*一级分类名称*/
         B.MATZLT, /*二级分类名称*/
         B.MATXLT, /*三级分类名称*/
         B.ITEM_CODE, /*商品编码*/
         B.GOODS_NAME GOOD_NAME, /*商品名称*/
         B.GOODS_PRICE GOOD_S_PRICE, /*商品价格*/
         (SELECT NVL(MAX(D.COST_PRICE), 0)
            FROM FACT_GOODS_SALES D
           WHERE D.POSTING_DATE_KEY = 20180117
             AND B.ITEM_CODE = D.GOODS_COMMON_KEY) GOOD_C_PRICE, /*商品进价*/
         (SELECT E.GROUP_NAME
            FROM DIM_GOOD E
           WHERE B.ITEM_CODE = E.ITEM_CODE
             AND E.CURRENT_FLG = 'Y') GROUP_NAME, /*提报组*/
         NVL((SELECT MAX(1)
               FROM DIM_TV_GOOD F
              WHERE B.ITEM_CODE = F.ITEM_CODE
                AND F.TV_STARTDAY_KEY = 20180117),
             0) IS_ONTV, /*是否当天播出*/
         B.IS_SHIPPING_SELF, /*是否仓配*/
         NVL(L.TV_ORDER_AMOUNT, 0) TV_ORDER_AMOUNT, /*TV销售金额*/
         NVL(L.TV_ORDER_QTY, 0) TV_ORDER_QTY, /*TV销售件数*/
         NVL(A.DS_ORDER_AMOUNT, 0) DS_ORDER_AMOUNT, /*电商销售金额*/
         NVL(A.DS_ORDER_QTY, 0) DS_ORDER_QTY, /*电商销售件数*/
         NVL(A.DS_PROFIT_AMOUNT, 0) PROFIT_AMOUNT, /*电商毛利额*/
         NVL(A.DS_PROFIT_RATE, 0) PROFIT_RATE, /*电商毛利率*/
         NVL(C.PV, 0) PV, /*浏览次数*/
         NVL(C.UV, 0) UV, /*浏览人数*/
         NVL(A.DS_ORDER_MEMBER_COUNT, 0) DS_ORDER_MEMBER_COUNT, /*电商订购人数*/
         DECODE(NVL(C.UV, 0),
                0,
                0,
                ROUND(NVL(A.DS_ORDER_MEMBER_COUNT, 0) / NVL(C.UV, 0), 2)) CONVERSION_RATE, /*转换率*/
         NVL(J.FAV_COUNT, 0) FAV_COUNT, /*收藏次数*/
         NVL(K.CAR_COUNT, 0) CAR_COUNT, /*加购物车次数*/
         NVL(I.LOW_EVAL_COUNT, 0) LOW_EVAL_COUNT, /*差评次数*/
         NVL(I.MED_EVAL_COUNT, 0) MED_EVAL_COUNT, /*中评次数*/
         NVL(I.HIGH_EVAL_COUNT, 0) HIGH_EVAL_COUNT, /*好评次数*/
         NVL(A.DS_REJECT_MEMBER_COUNT, 0) DS_REJECT_MEMBER_COUNT, /*电商拒收人数*/
         NVL(A.DS_REJECT_QTY, 0) DS_REJECT_QTY, /*电商拒收件数*/
         NVL(A.DS_REVERSE_MEMBER_COUNT, 0) DS_REVERSE_MEMBER_COUNT, /*电商退货人数*/
         NVL(A.DS_REVERSE_QTY, 0) DS_REVERSE_QTY, /*电商退货件数*/
         SYSDATE W_INSERT_DT,
         SYSDATE W_UPDATE_DT
    FROM (SELECT 20180117 POSTING_DATE_KEY,
                 N.ITEM_CODE,
                 N.GOODS_NAME,
                 N.MATDLT,
                 N.MATZLT,
                 N.MATXLT,
                 N.GOODS_PRICE,
                 N.IS_SHIPPING_SELF
            FROM DIM_EC_GOOD N) B,
         OPER_PRODUCT_DAILY_DS_S A,
         OPER_PRODUCT_DAILY_TV_S L,
         OPER_PRODUCT_DAILY_PUV_S C,
         OPER_PRODUCT_DAILY_EVAL_S I,
         OPER_PRODUCT_DAILY_FAV_S J,
         OPER_PRODUCT_DAILY_CAR_S K
   WHERE B.ITEM_CODE = A.ITEM_CODE(+)
     AND B.ITEM_CODE = C.ITEM_CODE(+)
     AND B.ITEM_CODE = I.ITEM_CODE(+)
     AND B.ITEM_CODE = J.ITEM_CODE(+)
     AND B.ITEM_CODE = K.ITEM_CODE(+)
     AND B.ITEM_CODE = L.ITEM_CODE(+)
     AND B.POSTING_DATE_KEY = A.POSTING_DATE_KEY(+)
     AND B.POSTING_DATE_KEY = L.POSTING_DATE_KEY(+)
     AND B.POSTING_DATE_KEY = C.VISIT_DATE_KEY(+)
     AND B.POSTING_DATE_KEY = I.GEVAL_ADDTIME_KEY(+)
     AND B.POSTING_DATE_KEY = J.FAV_TIME(+)
     AND B.POSTING_DATE_KEY = K.CREATE_DATE_KEY(+)
     AND (A.DS_ORDER_QTY <> 0 OR L.TV_ORDER_QTY <> 0 OR C.PV <> 0 OR
         I.LOW_EVAL_COUNT <> 0 OR I.MED_EVAL_COUNT <> 0 OR
         I.HIGH_EVAL_COUNT <> 0 OR J.FAV_COUNT <> 0 OR K.CAR_COUNT <> 0);

--tmp
TRUNCATE TABLE OPER_PRODUCT_DAILY_DS_S;
TRUNCATE TABLE OPER_PRODUCT_DAILY_TV_S;
TRUNCATE TABLE OPER_PRODUCT_DAILY_PUV_S;
TRUNCATE TABLE OPER_PRODUCT_DAILY_EVAL_S;
TRUNCATE TABLE OPER_PRODUCT_DAILY_FAV_S;
TRUNCATE TABLE OPER_PRODUCT_DAILY_CAR_S;

SELECT * FROM OPER_PRODUCT_DAILY_DS_S A;
SELECT * FROM OPER_PRODUCT_DAILY_TV_S L;
SELECT * FROM OPER_PRODUCT_DAILY_PUV_S C;
SELECT * FROM OPER_PRODUCT_DAILY_EVAL_S I;
SELECT * FROM OPER_PRODUCT_DAILY_FAV_S J;
SELECT * FROM OPER_PRODUCT_DAILY_CAR_S K;
select * from OPER_PRODUCT_DAILY_PREVIEW t where t.fav_count <> 0;

select * from OPER_PRODUCT_DAILY_PREVIEW t where t.car_count <> 0;
SELECT DISTINCT A1.SALES_SOURCE_NAME
  FROM OPER_PRODUCT_DAILY_REPORT A1
 WHERE A1.POSTING_DATE_KEY = 20180117;
SELECT K1.CREATE_DATE_KEY, K1.SCGID ITEM_CODE, COUNT(1) CAR_COUNT
  FROM FACT_SHOPPINGCAR K1
 WHERE K1.PAGE_NAME = 'good'
   AND K1.CREATE_DATE_KEY = 20180117
 GROUP BY K1.CREATE_DATE_KEY, K1.SCGID;

SELECT * FROM FACT_SHOPPINGCAR K1;
SELECT K1.PAGE_NAME FROM FACT_SHOPPINGCAR K1;
SELECT J1.FAV_TIME, J1.FAV_ID ITEM_CODE, COUNT(1) FAV_COUNT
  FROM FACT_FAVORITES J1
 WHERE J1.FAV_TYPE = 'goods'
   AND J1.FAV_TIME = 20180117
 GROUP BY J1.FAV_TIME, J1.FAV_ID;
SELECT * FROM FACT_FAVORITES A;
SELECT DISTINCT A.FAV_TYPE FROM FACT_FAVORITES A;
SELECT H.GEVAL_ADDTIME_KEY,
       H.ITEM_CODE,
       SUM(H.LOW_EVAL) LOW_EVAL_COUNT,
       SUM(H.MED_EVAL) MED_EVAL_COUNT,
       SUM(H.HIGH_EVAL) HIGH_EVAL_COUNT
  FROM (SELECT G.GEVAL_ADDTIME_KEY,
               G.ITEM_CODE,
               CASE
                 WHEN G.GEVAL_SCORES IN (1, 2) THEN
                  1
                 ELSE
                  0
               END LOW_EVAL,
               CASE
                 WHEN G.GEVAL_SCORES IN (3) THEN
                  1
                 ELSE
                  0
               END MED_EVAL,
               CASE
                 WHEN G.GEVAL_SCORES IN (4, 5) THEN
                  1
                 ELSE
                  0
               END HIGH_EVAL
          FROM FACT_GOODS_EVALUATE G
         WHERE G.GEVAL_ADDTIME_KEY = 20180117) H
 GROUP BY H.GEVAL_ADDTIME_KEY, H.ITEM_CODE;

SELECT *
  FROM FACT_GOODS_EVALUATE A
 WHERE A.GEVAL_ADDTIME_KEY = 20180117
   AND A.ITEM_CODE = 228967;
SELECT F.ITEM_CODE, COUNT(1)
  FROM DIM_TV_GOOD F
 WHERE F.TV_STARTDAY_KEY = 20180117
 GROUP BY F.ITEM_CODE;
SELECT *
  FROM DIM_TV_GOOD F
 WHERE F.TV_STARTDAY_KEY = 20180117
   AND F.ITEM_CODE = 226068;
SELECT * FROM DIM_TV_GOOD;
SELECT DISTINCT A.POSTING_DATE_KEY, A.COST_PRICE
  FROM FACT_GOODS_SALES A
 WHERE A.GOODS_COMMON_KEY = 195435;
SELECT DISTINCT A.GOODS_COMMON_KEY, A.COST_PRICE
  FROM FACT_GOODS_SALES A
 WHERE A.POSTING_DATE_KEY = 20180121;
SELECT DISTINCT A.SALES_SOURCE_NAME, A.SALES_SOURCE_SECOND_NAME
  FROM OPER_PRODUCT_DAILY_REPORT A
 WHERE A.POSTING_DATE_KEY = 20180121;
SELECT *
  FROM OPER_PRODUCT_DAILY_REPORT A
 WHERE A.POSTING_DATE_KEY = 20180121
   AND A.SALES_SOURCE_SECOND_NAME IN ('TV全国', '芒果生活TV');
